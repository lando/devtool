name: Create Releases

on:
  release:
    types:
      - created

jobs:
  pkg-binary:
    runs-on: 'ubuntu-24.04'
    env:
      TERM: xterm
    steps:
      - name: Placeholder step rn fn
        run: |
          echo "hello there!"

  # package:
  #   uses: ./.github/workflows/pkg-binary.yml
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       arch:
  #         - x64
  #         - arm64
  #       os:
  #         - linux
  #         - macos
  #         - win

  #   with:
  #     arch: ${{ matrix.arch }}
  #     edge: ${{ github.event.release.prerelease }}
  #     filename: lando-${{ matrix.os }}-${{ matrix.arch }}-${{ github.ref_name }}
  #     node-version: '20'
  #     os: ${{ matrix.os }}
  #     version: ${{ github.event.release.tag_name }}

  # sign:
  #   uses: ./.github/workflows/sign-binary.yml
  #   needs:
  #     - package
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       file:
  #         - lando-linux-arm64-${{ github.ref_name }}
  #         - lando-macos-arm64-${{ github.ref_name }}
  #         - lando-win-arm64-${{ github.ref_name }}

  #         - lando-linux-x64-${{ github.ref_name }}
  #         - lando-macos-x64-${{ github.ref_name }}
  #         - lando-win-x64-${{ github.ref_name }}

  #   with:
  #     download-pattern: packaged-lando-*
  #     file: ${{ matrix.file }}
  #   secrets:
  #     apple-notary-user: ${{ secrets.APPLE_NOTARY_USER }}
  #     apple-notary-password: ${{ secrets.APPLE_NOTARY_PASSWORD }}
  #     certificate-data: ${{ contains(matrix.file, 'macos') && secrets.APPLE_CERT_DATA || secrets.KEYLOCKER_CLIENT_CERT }}
  #     certificate-password: ${{ contains(matrix.file, 'macos') && secrets.APPLE_CERT_PASSWORD || secrets.KEYLOCKER_CLIENT_CERT_PASSWORD }}
  #     keylocker-api-key: ${{ secrets.KEYLOCKER_API_KEY }}
  #     keylocker-cert-sha1-hash: ${{ secrets.KEYLOCKER_CERT_SHA1_HASH }}
  #     keylocker-keypair-alias: ${{ secrets.KEYLOCKER_KEYPAIR_ALIAS }}

  # build-release-binary-alias:
  #   uses: ./.github/workflows/release-rename-binary.yml
  #   needs:
  #     - sign
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       arch:
  #         - x64
  #         - arm64
  #       os:
  #         - linux
  #         - macos
  #         - win
  #       alias: ${{ github.event.release.prerelease == true && fromJson('["edge"]') || fromJson('["stable", "edge"]') }}

  #   with:
  #     source: lando-${{ matrix.os }}-${{ matrix.arch }}-${{ github.ref_name }}
  #     destination: lando-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.alias }}
  #     download-pattern: signed-lando-*
  # build-release-binary-tag:
  #   uses: ./.github/workflows/release-rename-binary.yml
  #   needs:
  #     - sign
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       arch:
  #         - x64
  #         - arm64
  #       os:
  #         - linux
  #         - macos
  #         - win
  #   with:
  #     source: lando-${{ matrix.os }}-${{ matrix.arch }}-${{ github.ref_name }}
  #     destination: lando-${{ matrix.os }}-${{ matrix.arch }}-${{ github.ref_name }}
  #     download-pattern: signed-lando-*

  # checksum:
  #   uses: ./.github/workflows/generate-checksums.yml
  #   needs:
  #     - build-release-binary-alias
  #     - build-release-binary-tag
  #   with:
  #     download-pattern: release-*-${{ github.ref_name }}*
  #     flatten: true
  #     show: true
  #     upload-name: release-checksums-${{ github.ref_name }}
  # checksum-s3-aliases:
  #   uses: ./.github/workflows/generate-checksums.yml
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       alias:
  #         - edge
  #         - ${{ github.event.release.prerelease == false && 'stable' || 'prerelease' }}
  #         - ${{ github.ref_name }}
  #   needs:
  #     - build-release-binary-alias
  #     - build-release-binary-tag
  #   with:
  #     download-pattern: release-*-${{ github.ref_name }}*
  #     output: sha256sum-${{ matrix.alias }}.txt
  #     flatten: true
  #     show: true
  #     upload-name: release-checksums${{ matrix.alias }}

  # deploy-releases-s3:
  #   uses: ./.github/workflows/deploy-s3.yml
  #   needs:
  #     - checksum
  #     - checksum-s3-aliases
  #   with:
  #     download-pattern: release-*
  #   secrets:
  #     aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
  #     aws-access-key-id: ${{ secrets.S3_ACCESS_KEY_ID }}
  #     aws-region: us-east-1
  # deploy-releases-artifacts:
  #   uses: ./.github/workflows/deploy-artifacts.yml
  #   needs:
  #     - checksum
  #   with:
  #     download-pattern: release-*
  # deploy-releases-releases:
  #   uses: ./.github/workflows/deploy-releases.yml
  #   needs:
  #     - checksum
  #   with:
  #     download-pattern: release-*-${{ github.ref_name }}*
  # deploy-npm:
  #   uses: ./.github/workflows/deploy-npm.yml
  #   needs:
  #     - checksum
  #   secrets:
  #     github-token: ${{ secrets.RTFM47_COAXIUM_INJECTOR }}
  #     npm-token: ${{ secrets.NPM_DEPLOY_TOKEN }}
